585. Investments in 2016 (https://leetcode.com/problems/investments-in-2016/?envType=study-plan-v2&envId=top-sql-50)


Table: Insurance

+-------------+-------+
| Column Name | Type  |
+-------------+-------+
| pid         | int   |
| tiv_2015    | float |
| tiv_2016    | float |
| lat         | float |
| lon         | float |
+-------------+-------+
pid is the primary key column for this table.
Each row of this table contains information about one policy where:
pid is the policyholder's policy ID.
tiv_2015 is the total investment value in 2015 and tiv_2016 is the total investment value in 2016.
lat is the latitude of the policy holder's city. It's guaranteed that lat is not NULL.
lon is the longitude of the policy holder's city. It's guaranteed that lon is not NULL.
 

Write an SQL query to report the sum of all total investment values in 2016 tiv_2016, for all policyholders who:

have the same tiv_2015 value as one or more other policyholders, and
are not located in the same city like any other policyholder (i.e., the (lat, lon) attribute pairs must be unique).
Round tiv_2016 to two decimal places.

The query result format is in the following example.

 

Example 1:

Input: 
Insurance table:
+-----+----------+----------+-----+-----+
| pid | tiv_2015 | tiv_2016 | lat | lon |
+-----+----------+----------+-----+-----+
| 1   | 10       | 5        | 10  | 10  |
| 2   | 20       | 20       | 20  | 20  |
| 3   | 10       | 30       | 20  | 20  |
| 4   | 10       | 40       | 40  | 40  |
+-----+----------+----------+-----+-----+
Output: 
+----------+
| tiv_2016 |
+----------+
| 45.00    |
+----------+
Explanation: 
The first record in the table, like the last record, meets both of the two criteria.
The tiv_2015 value 10 is the same as the third and fourth records, and its location is unique.

The second record does not meet any of the two criteria. Its tiv_2015 is not like any other policyholders and its location is the same as the third record, which makes the third record fail, too.
So, the result is the sum of tiv_2016 of the first and last record, which is 45.


Summary :

1. Table Overview: You are given a table called "Insurance" with five columns:

      pid (integer): The policyholder's policy ID (primary key).
      tiv_2015 (float): The total investment value in the year 2015 for that policyholder.
      tiv_2016 (float): The total investment value in the year 2016 for that policyholder.
      lat (float): The latitude of the policyholder's city.
      lon (float): The longitude of the policyholder's city.

2. Objective: The task is to write an SQL query that reports the sum of all total investment values in 2016 (tiv_2016) for policyholders who meet two conditions:

      Condition 1: They have the same tiv_2015 value as one or more other policyholders.
      Condition 2: They are not located in the same city (i.e., the (lat, lon) attribute pairs must be unique) as any other policyholder.

3. Finding Policyholders: You need to identify the policyholders who satisfy both conditions:

      Find policyholders who have the same tiv_2015 value as one or more other policyholders.
      Among those, only consider policyholders whose (lat, lon) attribute pairs are unique, meaning their location is different from any other policyholder.

4. Output Format: The output should be a result table containing a single column:

      tiv_2016 (float): The sum of all total investment values in 2016 (tiv_2016) for the policyholders who meet the specified conditions. Round this sum to two decimal places.



Solution:

select round(sum(insurance.TIV_2016),2) as TIV_2016
from insurance
where insurance.TIV_2015 in
    (select TIV_2015
      from insurance
      group by TIV_2015
      having count(*) > 1)
    and concat(LAT, LON) in
    (select concat(LAT, LON)
      from insurance
      group by LAT, LON
      having count(*) = 1)

Runtime : 215 ms
